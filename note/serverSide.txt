//handler error at error-handler
-use object.keys and pass the object for duplicate error

  if (err.code && err.code === 11000) {
    defaultError.statusCode = StatusCodes.BAD_REQUEST;
    defaultError.msg = `${Object.keys(err.keyValue)} field has to be unique`;
  }

//check empty keyValue
let {name, password, email} =req.body;

if(!name || !password, !email) {
    throw new Error("please provide all values")
}

res.statusCode(201).json({name, password, email});

-> at error-handler 
msg: err.message || "message"

//prevent duplicate email
-> controller 
const userAlreadyExists = await User.findOne({email})
if(userAlreadyExists) {
  throw new Error("")
}

//hash password
install bcript.js
and use mongoose middleware ** don't use arrow function

UserSchema.pre("save", async function () {
  const salt = await bcrypt.genSalt(10);
  this.password = await bcrypt.hash(this.password, salt);
});

//set JWT
